rep(x = "28", times = 3150),
rep(x = "28", times = 2668))
tran$protocol <- "Morizane"
tran$line <- "ES"
tran$replicate <- c(rep(x = "1", times = 491),
rep(x = "2", times = 1662),
rep(x = "1", times = 3150),
rep(x = "2", times = 2668))
tran <- tran[, !is.na(tran$LineageID)]
tran$sample.id <- paste0("Tran_M_R", tran$replicate, "_D", tran$age)
StrDotPlot(tran, features = c("SIX2", "DAPL1", "HNF1B", "HNF4A", "JAG1", "NPHS1", "PAX2", "PAX8", "SOX17", "KDR",
"OLFM3", "COL3A1", "DCN", "FOXD1", "GATA3", "TMEM52B"), group.by = "LineageID")
write_rds(tran, here::here("output/seurat/Tran_2019_Organoids.rds"))
tran <- tran %>% FindVariableFeatures(nfeatures=10000) %>% ScaleData() %>% RunPCA(npcs=100, seed.use = 250395) %>% RunUMAP(dims=1:100, seed.use = 250395, min.dist = 0.5)
tran[, tran$nFeature_RNA>1500] %>% DimPlot(group.by = "LineageID", pt.size = 3) + FeaturePlot(tran, features = "scpred_NPC", order = T, pt.size = 2)
FeaturePlot(tran, features = "scpred_NPC", order = T, pt.size = 2) + FeaturePlot(tran, features = "PAX8", order = T, pt.size = 2)
FeaturePlot(tran, features = "scpred_NPC", order = T, pt.size = 2) + FeaturePlot(tran, features = "PAX2", order = T, pt.size = 2)
DimPlot(tran, group.by = "LineageID")
DimPlot(tran, group.by = "DKCC")
ComponentPlot(tran)
urep.culture <- read_rds(here::here("output/seurat/HowdenWilson_2020_UrEpCulture.rds"))
DotPlotCompare(new.object = urep.culture, compare.to = "reference",
features = c("SIX2", "DAPL1", "HNF1B", "HNF4A", "JAG1", "SLC12A1", "SPP1", "SLC47A1", "CLDN1", "OLFM3", "NPHS1",
"COL3A1", "DCN", "FOXD1", "COL1A1", "GATA3", "TMEM52B", "PDGFRB", "EPCAM", "KDR"), split.by = "sample", scaling = "log", dot.min = 5)
StrDotPlot(urep.culture, features = c("SIX2", "DAPL1", "HNF1B", "HNF4A", "JAG1", "NPHS1", "PAX2", "PAX8", "SOX17", "KDR",
"OLFM3", "COL3A1", "DCN", "FOXD1", "GATA3", "TMEM52B"), group.by = "LineageID")
mae <- read_rds(here::here("output/seurat/Mae_2020_Diff_UE.rds"))
mae <- DevKidCC(mae)
mae <- mae[, !is.na(mae$LineageID)]
DotPlotCompare(new.object = mae, compare.to = "reference",
features = c("SIX2", "DAPL1", "HNF1B", "HNF4A", "JAG1", "SLC12A1", "SPP1", "SLC47A1", "CLDN1", "OLFM3", "NPHS1",
"COL3A1", "DCN", "FOXD1", "COL1A1", "GATA3", "TMEM52B", "PDGFRB", "EPCAM", "KDR"), split.by = "sample", scaling = "log", dot.min = 5)
StrDotPlot(mae, features = c("SIX2", "DAPL1", "HNF1B", "HNF4A", "JAG1", "NPHS1", "PAX2", "PAX8", "SOX17", "KDR",
"OLFM3", "COL3A1", "DCN", "FOXD1", "GATA3", "TMEM52B"), group.by = "LineageID")
write_rds(mae, here::here("output/seurat/Mae_2020_Diff_UE.rds"))
mae
mae <- mae[, !is.na(mae$LineageID)]
DotPlotCompare(new.object = mae, compare.to = "reference",
features = c("SIX2", "DAPL1", "HNF1B", "HNF4A", "JAG1", "SLC12A1", "SPP1", "SLC47A1", "CLDN1", "OLFM3", "NPHS1",
"COL3A1", "DCN", "FOXD1", "COL1A1", "GATA3", "TMEM52B", "PDGFRB", "EPCAM", "KDR"), split.by = "sample", scaling = "log", dot.min = 5)
StrDotPlot(mae, features = c("SIX2", "DAPL1", "HNF1B", "HNF4A", "JAG1", "NPHS1", "PAX2", "PAX8", "SOX17", "KDR",
"OLFM3", "COL3A1", "DCN", "FOXD1", "GATA3", "TMEM52B"), group.by = "LineageID")
ComponentPlot(mae, component = "LineageID")
ComponentPlot(urep.culture, component = "LineageID")
ComponentPlot(urep.culture, component = "LineageID", show.pct = T)
ComponentPlot(mae, component = "LineageID", show.pct = T)
ComponentPlot(mae, component = "DKCC", show.pct = T)
ComponentPlot(urep.culture, component = "DKCC", show.pct = T)
ComponentPlot(urep.culture, component = "DKCC", show.pct = T) %>% ComponentPlot()
ComponentPlot(urep.culture, component = "DKCC", show.pct = T) %>% coord_flip()
ComponentPlot(urep.culture, component = "DKCC", show.pct = T) %>% coord_flip()
ComponentPlot(urep.culture, component = "DKCC", show.pct = T) + coord_flip()
ComponentPlot(mae, component = "DKCC", show.pct = T) + coord_flip()
table(mae$DKCC)
table(urep.culture$DKCC)
phipson <- read_rds("output/seurat/2019_Organoids.rds")
seurat.list <- list(wu = read_rds("output/seurat/Wu_2018_Organoids.rds"),
cz = read_rds("output/seurat/Czerniecki_2018_Organoids.rds"),
howden = read_rds("output/seurat/Howden_2019_Organoids.rds"),
phipson = phipson[, phipson$sample.id != "Ku_D25"],
harder = read_rds("output/seurat/Harder_2019_Organoids.rds"),
subramanian = read_rds("output/seurat/Subramanian_2019_Organoids.rds"),
low = read_rds("output/seurat/Low_2019_Organoids.rds"),
kumar = phipson[, phipson$sample.id == "Ku_D25"],
tran = read_rds("output/seurat/Tran_2019_Organoids.rds"),
lvh = read_rds("output/seurat/LVH_2020_Organoids.rds"),
hw = read_rds("output/seurat/HowdenWilson_2020_UrEpCulture.rds"),
mae = read_rds("output/seurat/Mae_2020_Diff_UE.rds"))
seurat.list$howden$protocol <- "Takasato"
seurat.list$howden$protocol <- "Takasato"
seurat <- seurat.list[1:10]
for (i in 1:length(seurat)) {
seurat[[i]]$age <- as.character(seurat[[i]]$age) %>% as.numeric()
}
seurat.all <- merge(seurat[[1]], seurat[2:10])
all <- seurat.all@meta.data %>% filter(!is.na(sample.id))
cells.t <- rownames(all %>% filter(age>20, protocol == "Takasato"))
cells.m <- rownames(all %>% filter(age>18, protocol == "Morizane"))
cells.f <- rownames(all %>% filter(age>18, protocol == "Freedman"))
(ComponentPlot(subset(seurat.all, cells = cells.f),
identity = "sample.id", do.label = T,
show.pct = T, component = "LineageID") + coord_flip()  +
ggtitle("Freedman protocol", subtitle = "Tier 1") +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank())) +
(ComponentPlot(subset(seurat.all, cells = cells.m),
identity = "sample.id", do.label = T,
show.pct = T, component = "LineageID") + coord_flip()  + ggtitle("Morizane protocol", subtitle = "Tier 1") +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank())) +
(ComponentPlot(subset(seurat.all, cells = cells.t),
identity = "sample.id", do.label = T,
show.pct = T, component = "LineageID") + coord_flip()  + ggtitle("Takasato protocol", subtitle = "Tier 1")+
theme(legend.position = "bottom",
axis.title.y = element_blank()) + guides(fill = guide_legend(reverse = TRUE))) +
#  (ComponentPlot(subset(seurat.all, cells = (rownames(all %>% filter(age>18, protocol == "Freedman", !is.na(NephronID))))),
#                 identity = "sample.id", do.label = T, show.unassigned = F,
#                 show.pct = T, component = "NephronID") + coord_flip()  + ggtitle("Freedman protocol", subtitle = "Tier 2: Nephron")) +
#  theme(legend.position = "none",
#        axis.text.y = element_text(size = 0),
#        axis.title.x = element_blank(),
#         axis.title.y = element_blank()) +
#
#  (ComponentPlot(subset(seurat.all, cells = (rownames(all %>% filter(age>18, protocol == "Morizane", !is.na(NephronID))))),
#                 identity = "sample.id", do.label = T,
#                 show.pct = T, component = "NephronID") + coord_flip()   + ggtitle("Morizane protocol", subtitle = "Tier 2: Nephron")) +
#  theme(legend.position = "none",
#        axis.text.y = element_text(size = 0),
#        axis.title.x = element_blank(),
#         axis.title.y = element_blank()) +
#
#  (ComponentPlot(subset(seurat.all, cells = (rownames(all %>% filter(age>18, protocol == "Takasato", !is.na(NephronID))))),
#                 identity = "sample.id", do.label = T,
#                 show.pct = T, component = "NephronID") + coord_flip()   + ggtitle("Takasato protocol", subtitle = "Tier 2: Nephron")) +
#  theme(legend.position = "bottom",  axis.text.y = element_text(size = 0),
#         axis.title.y = element_blank()) + guides(fill = guide_legend(reverse = TRUE))+
#
(ComponentPlot(subset(seurat.all, cells = (rownames(all %>% filter(age>18, protocol == "Freedman", !is.na(NephronID))))),
identity = "sample.id", do.label = T,
show.pct = T, component = "DKCC") + coord_flip()  + ggtitle("Freedman protocol", subtitle = "DevKidCC Identity: Nephron") +
theme(legend.position = "none",
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank())) +
(ComponentPlot(subset(seurat.all, cells = (rownames(all %>% filter(age>18, protocol == "Morizane", !is.na(NephronID))))),
identity = "sample.id", do.label = T,
show.pct = T, component = "DKCC") + coord_flip()   + ggtitle("Morizane protocol", subtitle = "DevKidCC Identity: Nephron")+
theme(legend.position = "none",
axis.text.y = element_text(size = 0),
axis.title.x = element_blank(),
axis.title.y = element_blank())) +
(ComponentPlot(subset(seurat.all, cells = (rownames(all %>% filter(age>18, protocol == "Takasato", !is.na(NephronID))))),
identity = "sample.id", do.label = T,
show.pct = T, component = "DKCC") + coord_flip()  +
ggtitle("Takasato protocol", subtitle = "DevKidCC Identity: Nephron")+
theme(legend.position = "bottom", axis.text.y = element_text(size = 0),
axis.title.y = element_blank()) + guides(fill = guide_legend(reverse = TRUE))) +
plot_layout(design = "
AD
AD
AD
BE
BE
CF
CF
CF
CF
CF
CF")
old.order <- seurat.all@meta.data %>% rownames_to_column("cells") %>% select(c(cells, sample.id))
new.order <- all %>% arrange(age) %>% select(sample.id) %>% unique()
seurat.order <- seurat.all
seurat.order$sample.id <- factor(seurat.order$sample.id, levels = unique(new.order$sample.id))
# 4A
(ComponentPlot(subset(seurat.order, cells = (rownames(all %>% filter(age>18)))),
identity = "sample.id",
show.pct = T, component = "LineageID") +
coord_flip() + ggtitle("Older Organoids")) +
(ComponentPlot(subset(seurat.order, cells = (rownames(all %>% filter(age<=18, age>7)))), identity = "sample.id",
show.pct = T, component = "LineageID") +
coord_flip() + ggtitle("Younger Organoids")) +
(ComponentPlot(subset(seurat.order, cells = (rownames(all %>% filter(age<=7)))), identity = "sample.id",
show.pct = T, component = "LineageID") +
coord_flip() + ggtitle("Monolayer Diffs")) +
plot_layout(guides = "collect", design = "
A
A
A
A
A
A
A
A
A
B
B
C
")
make.models <- read_rds("output/seurat/NewRef.rds")
DimPlot(make.models, group.by = "NephronID")
model1.all
model1.all %>% str()
model1.all@features
model1.all@train
make.models <- FindNeighbors(make.models, dims = 1:50, reduction = "harmony")
make.models <- FindClusters(make.models, resolution = 0.25)
DimPlot(make.models, group.by = "RNA_snn_res.0.25", label = T)
old.models <- read_rds("output/seurat/Reference.rds")
DimPlot(old.models, group.by = "LineageID")
FeaturePlot(howden, features = c("scpred_NPC", "scpred_EN"))
FeaturePlot(make.models, features = c("DAPL1", "SIX2", "TMEM100", "CITED1"), order = T)
DimPlot(make.models, group.by = "SegmentID")
neph <- make.models[, make.models$LineageID == "Nephron"]
neph <- neph %>% RunUMAP(reduction = "harmony", dims = 1:50, seed.use = 250395, min.dist = 0.5)
DimPlot(neph, group.by = "RNA_snn_res.15")
DimPlot(neph, group.by = "RNA_snn_res0..15")
DimPlot(neph, group.by = "RNA_snn_res.0.15")
DimPlot(neph, group.by = "RNA_snn_res.0.15")
make.models <- FindNeighbors(make.models, dims = 1:50, reduction = "harmony")
make.models <- FindClusters(make.models, resolution = 0.15)
DimPlot(make.models, group.by = "RNA_snn_res.0.15", label = T)
neph <- make.models[, make.models$LineageID == "Nephron"]
neph <- neph %>% RunUMAP(reduction = "harmony", dims = 1:50, seed.use = 250395, min.dist = 0.5)
DimPlot(neph, group.by = "RNA_snn_res.0.15")
neph <- FindClusters(neph, resolution = 0.4)
neph <- FindNeighbors(neph, dims = 1:50, reduction = "harmony")
neph <- FindClusters(neph, resolution = 0.4)
DimPlot(make.models, group.by = "RNA_snn_res.0.4", label = T)
DimPlot(neph, group.by = "RNA_snn_res.0.4", label = T)
table(neph$RNA_snn_res.0.4, neph$SegmentID)
StrDotPlot(neph, group.by = "RNA_snn_res.0.4", features = c("SIX2", "CITED1", "TMEM100", "JAG1"))
StrDotPlot(neph, group.by = "RNA_snn_res.0.4", features = c("SIX2", "CITED1", "TMEM100", "JAG1", "CLDN1", "SLC3A1"))
StrDotPlot(neph, group.by = "RNA_snn_res.0.4", features = c("SIX2", "CITED1", "TMEM100", "JAG1", "CLDN1", "SLC3A1", "MAFB", "OLFM3", "NPHS1"))
StrDotPlot(neph, group.by = "RNA_snn_res.0.4", features = c("SIX2", "CITED1", "TMEM100", "JAG1", "CLDN1", "SLC3A1", "MAFB", "OLFM3", "NPHS1", "LHX1", "WT1"))
neph$NephronID <- neph$RNA_snn_res.0.4
StrDotPlot(neph, group.by = "RNA_snn_res.0.4", features = c("SIX2", "CITED1", "TMEM100", "JAG1", "CLDN1", "SLC3A1", "MAFB", "OLFM3", "NPHS1", "LHX1", "WT1", "SLC22A6", "SLC22A8"))
DimPlot(neph, group.by = "RNA_snn_res.0.4", label = T)
neph <- neph[, neph$RNA_snn_res.0.4 %in% c(1:9)]
eph <- make.models[, make.models$LineageID == "Nephron"]
neph <- neph %>% RunUMAP(reduction = "harmony", dims = 1:50, seed.use = 250395, min.dist = 0.5)
neph <- FindNeighbors(neph, dims = 1:50, reduction = "harmony")
neph <- FindClusters(neph, resolution = 0.4)
DimPlot(neph, group.by = "RNA_snn_res.0.4", label = T)
neph <- neph[, neph$RNA_snn_res.0.4 %in% c(1:9, 11)]
neph$NephronID <- neph$RNA_snn_res.0.4
neph$NephronID <- gsub(pattern = 0, replacement = "RC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 4, replacement = "RC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 7, replacement = "EN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 3, replacement = "EN", x = neph$NephronID)
neph$LineageID <- gsub(pattern = 6, replacement = "NPC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = "NPC", replacement = NA, x = neph$NephronID)
neph$NephronID <- gsub(pattern = 2, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 8, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 9, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 1, replacement = "PN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 11, replacement = "PN", x = neph$NephronID)
DimPlot(neph, group.by = "NephronID")
neph <- make.models[, make.models$LineageID == "Nephron"]
neph <- neph %>% RunUMAP(reduction = "harmony", dims = 1:50, seed.use = 250395, min.dist = 0.5)
neph <- FindNeighbors(neph, dims = 1:50, reduction = "harmony")
neph <- FindClusters(neph, resolution = 0.4)
DimPlot(neph, group.by = "RNA_snn_res.0.4", label = T)
neph <- neph[, neph$RNA_snn_res.0.4 %in% c(1:9, 11)]
neph$NephronID <- neph$RNA_snn_res.0.4
neph$NephronID <- gsub(pattern = 0, replacement = "RC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 4, replacement = "RC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 7, replacement = "EN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 3, replacement = "EN", x = neph$NephronID)
neph$LineageID <- gsub(pattern = 6, replacement = "NPC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = "NPC", replacement = NA, x = neph$NephronID)
neph$NephronID <- gsub(pattern = 2, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 8, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 9, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 1, replacement = "PN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 11, replacement = "PN", x = neph$NephronID)
DimPlot(neph, group.by = "NephronID")
neph$NephronID <- neph$RNA_snn_res.0.4
neph$NephronID <- gsub(pattern = 5, replacement = "PN", x = neph$NephronID)
DimPlot(neph, group.by = "NephronID")
neph$NephronID <- neph$RNA_snn_res.0.4
neph$NephronID <- gsub(pattern = 0, replacement = "RC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 4, replacement = "RC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 7, replacement = "EN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 3, replacement = "EN", x = neph$NephronID)
neph$LineageID <- gsub(pattern = 6, replacement = "NPC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = "NPC", replacement = NA, x = neph$NephronID)
neph$NephronID <- gsub(pattern = 2, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 8, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 9, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 11, replacement = "PN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 1, replacement = "PN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 5, replacement = "PN", x = neph$NephronID)
DimPlot(neph, group.by = "NephronID")
neph$NephronID <- gsub(pattern = 6, replacement = NA, x = neph$NephronID)
DimPlot(neph, group.by = "NephronID")
DimPlot(neph, group.by = "RNA_snn_res.0.4", label = T)
table(neph$RNA_snn_res.0.4, neph$SegmentID)
neph <- make.models[, make.models$LineageID == "Nephron"]
neph <- neph %>% RunUMAP(reduction = "harmony", dims = 1:50, seed.use = 250395, min.dist = 0.5)
neph <- FindNeighbors(neph, dims = 1:50, reduction = "harmony")
neph <- FindClusters(neph, resolution = 0.4)
DimPlot(neph, group.by = "RNA_snn_res.0.4", label = T)
neph <- neph[, neph$RNA_snn_res.0.4 %in% c(0:9, 11)]
neph$NephronID <- neph$RNA_snn_res.0.4
neph$NephronID <- gsub(pattern = 0, replacement = "RC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 4, replacement = "RC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 7, replacement = "EN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 3, replacement = "EN", x = neph$NephronID)
neph$LineageID <- gsub(pattern = 6, replacement = "NPC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 6, replacement = NA, x = neph$NephronID)
neph$NephronID <- gsub(pattern = 2, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 8, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 9, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 11, replacement = "PN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 1, replacement = "PN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 5, replacement = "PN", x = neph$NephronID)
DimPlot(neph, group.by = "NephronID")
en <- neph[, neph$NephronID=="EN"]
en$SegmentID <- NA
dn <- neph[, neph$NephronID == "DN"]
dn <- dn[, dn$SegmentID %in% c("EDN", "DT", "LOH")]
pn <- neph[, neph$NephronID == "PN" & neph$SegmentID %in% c("EPN", "PT", "PEC")]
rc <- neph[, neph$NephronID == "RC" & neph$SegmentID %in% c("EPod", "Pod")]
md <- make.models@meta.data
md <-
left_join((md %>% rownames_to_column("cell") %>% select(cell)),
bind_rows(md %>% rownames_to_column("cell") %>% filter(LineageID %!in% c("Nephron")),
en@meta.data %>% rownames_to_column("cell"),
dn@meta.data %>% rownames_to_column("cell"),
pn@meta.data %>% rownames_to_column("cell"),
rc@meta.data %>% rownames_to_column("cell")),
by = "cell")  %>%
column_to_rownames("cell")
md <- md %>% filter(!is.na(LineageID))
md %>% filter(LineageID == "NPC" & !is.na(SegmentID)) %>% rownames() -> remove
make.models <- subset(make.models, cells = (rownames(md)[rownames(md) %!in% remove]))
make.models@meta.data <- md[, c(1:11)]
DimPlot(make.models, group.by = "LineageID")
DimPlot(en, group.by = "LineageID")
DimPlot(neph, group.by = "LineageID")
npc <- neph[, neph$LineageID == "NPC"]
neph <- make.models[, make.models$LineageID == "Nephron"]
neph <- neph %>% RunUMAP(reduction = "harmony", dims = 1:50, seed.use = 250395, min.dist = 0.5)
neph <- FindNeighbors(neph, dims = 1:50, reduction = "harmony")
neph <- FindClusters(neph, resolution = 0.4)
DimPlot(neph, group.by = "RNA_snn_res.0.4", label = T)
neph <- neph[, neph$RNA_snn_res.0.4 %in% c(0:9, 11)]
neph$NephronID <- neph$RNA_snn_res.0.4
neph$NephronID <- gsub(pattern = 0, replacement = "RC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 4, replacement = "RC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 7, replacement = "EN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 3, replacement = "EN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 2, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 8, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 9, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 11, replacement = "PN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 1, replacement = "PN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 5, replacement = "PN", x = neph$NephronID)
DimPlot(neph, group.by = "NephronID")
npc <- neph[, neph$LineageID == "NPC"]
npc$NephronID <- NA
npc$LineageID <- "NPC"
en <- neph[, neph$NephronID=="EN"]
en$SegmentID <- NA
dn <- neph[, neph$NephronID == "DN"]
dn <- dn[, dn$SegmentID %in% c("EDN", "DT", "LOH")]
pn <- neph[, neph$NephronID == "PN" & neph$SegmentID %in% c("EPN", "PT", "PEC")]
rc <- neph[, neph$NephronID == "RC" & neph$SegmentID %in% c("EPod", "Pod")]
md <- make.models@meta.data
md <-
left_join((md %>% rownames_to_column("cell") %>% select(cell)),
bind_rows(md %>% rownames_to_column("cell") %>% filter(LineageID %!in% c("Nephron")),
npc@meta.data %>% rownames_to_column("cell"),
en@meta.data %>% rownames_to_column("cell"),
dn@meta.data %>% rownames_to_column("cell"),
pn@meta.data %>% rownames_to_column("cell"),
rc@meta.data %>% rownames_to_column("cell")),
by = "cell")  %>%
column_to_rownames("cell")
md <- md %>% filter(!is.na(LineageID))
md %>% filter(LineageID == "NPC" & !is.na(SegmentID)) %>% rownames() -> remove
make.models <- subset(make.models, cells = (rownames(md)[rownames(md) %!in% remove]))
make.models@meta.data <- md[, c(1:11)]
make.models <- read_rds("output/seurat/NewRef.rds")
make.models <- FindNeighbors(make.models, dims = 1:50, reduction = "harmony")
make.models <- FindClusters(make.models, resolution = 0.15)
DimPlot(make.models, group.by = "RNA_snn_res.0.15", label = T)
make.models <- make.models[, make.models$RNA_snn_res.0.15 != 10]
make.models$LineageID <- make.models$RNA_snn_res.0.15
make.models$LineageID <- gsub(pattern = 2, replacement = "NPC", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 4, replacement = "Nephron", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 5, replacement = "Nephron", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 3, replacement = "Nephron", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 0, replacement = "Nephron", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 7, replacement = "UrEp", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 6, replacement = "Endo", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 1, replacement = "Stroma", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 8, replacement = "Stroma", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 9, replacement = "Stroma", x = make.models$LineageID)
DimPlot(make.models, group.by = "LineageID", label = T)
# Nephron
neph <- make.models[, make.models$LineageID == "Nephron"]
neph <- neph %>% RunUMAP(reduction = "harmony", dims = 1:50, seed.use = 250395, min.dist = 0.5)
neph <- FindNeighbors(neph, dims = 1:50, reduction = "harmony")
neph <- FindClusters(neph, resolution = 0.4)
DimPlot(neph, group.by = "RNA_snn_res.0.4", label = T)
neph <- neph[, neph$RNA_snn_res.0.4 %in% c(0:9, 11)]
neph$NephronID <- neph$RNA_snn_res.0.4
neph$NephronID <- gsub(pattern = 0, replacement = "RC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 4, replacement = "RC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 7, replacement = "EN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 3, replacement = "EN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 2, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 8, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 9, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 11, replacement = "PN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 1, replacement = "PN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 5, replacement = "PN", x = neph$NephronID)
DimPlot(neph, group.by = "NephronID")
npc <- neph[, neph$LineageID == "NPC"]
npc$NephronID <- NA
npc$LineageID <- "NPC"
en <- neph[, neph$NephronID=="EN"]
en$SegmentID <- NA
dn <- neph[, neph$NephronID == "DN"]
dn <- dn[, dn$SegmentID %in% c("EDN", "DT", "LOH")]
pn <- neph[, neph$NephronID == "PN" & neph$SegmentID %in% c("EPN", "PT", "PEC")]
rc <- neph[, neph$NephronID == "RC" & neph$SegmentID %in% c("EPod", "Pod")]
md <- make.models@meta.data
md <-
left_join((md %>% rownames_to_column("cell") %>% select(cell)),
bind_rows(md %>% rownames_to_column("cell") %>% filter(LineageID %!in% c("Nephron")),
npc@meta.data %>% rownames_to_column("cell"),
en@meta.data %>% rownames_to_column("cell"),
dn@meta.data %>% rownames_to_column("cell"),
pn@meta.data %>% rownames_to_column("cell"),
rc@meta.data %>% rownames_to_column("cell")),
by = "cell")  %>%
column_to_rownames("cell")
md <- md %>% filter(!is.na(LineageID))
md %>% filter(LineageID == "NPC" & !is.na(SegmentID)) %>% rownames() -> remove
make.models <- subset(make.models, cells = (rownames(md)[rownames(md) %!in% remove]))
make.models@meta.data <- md[, c(1:11)]
make.models <- read_rds("output/seurat/NewRef.rds")
make.models <- FindNeighbors(make.models, dims = 1:50, reduction = "harmony")
make.models <- FindClusters(make.models, resolution = 0.15)
DimPlot(make.models, group.by = "RNA_snn_res.0.15", label = T)
make.models <- make.models[, make.models$RNA_snn_res.0.15 != 10]
make.models$LineageID <- make.models$RNA_snn_res.0.15
make.models$LineageID <- gsub(pattern = 2, replacement = "NPC", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 4, replacement = "Nephron", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 5, replacement = "Nephron", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 3, replacement = "Nephron", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 0, replacement = "Nephron", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 7, replacement = "UrEp", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 6, replacement = "Endo", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 1, replacement = "Stroma", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 8, replacement = "Stroma", x = make.models$LineageID)
make.models$LineageID <- gsub(pattern = 9, replacement = "Stroma", x = make.models$LineageID)
DimPlot(make.models, group.by = "LineageID", label = T)
neph <- make.models[, make.models$LineageID == "Nephron"]
neph <- neph %>% RunUMAP(reduction = "harmony", dims = 1:50, seed.use = 250395, min.dist = 0.5)
neph <- FindNeighbors(neph, dims = 1:50, reduction = "harmony")
neph <- FindClusters(neph, resolution = 0.4)
DimPlot(neph, group.by = "RNA_snn_res.0.4", label = T)
DimPlot(neph[, neph$RNA_snn_res.0.4 %in% c(0:9, 11)], group.by = "RNA_snn_res.0.4", label = T)
neph <- neph[, neph$RNA_snn_res.0.4 %in% c(0:9, 11)]
FeaturePlot(neph, features = "TMEM100")
neph$NephronID <- gsub(pattern = 0, replacement = "RC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 4, replacement = "RC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 7, replacement = "EN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 2, replacement = "EN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 3, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 8, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 9, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 11, replacement = "PN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 1, replacement = "PN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 6, replacement = "PN", x = neph$NephronID)
DimPlot(neph, group.by = "NephronID")
neph$NephronID <- neph$RNA_snn_res.0.4
neph$NephronID <- gsub(pattern = 0, replacement = "RC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 4, replacement = "RC", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 7, replacement = "EN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 2, replacement = "EN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 3, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 8, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 9, replacement = "DN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 11, replacement = "PN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 1, replacement = "PN", x = neph$NephronID)
neph$NephronID <- gsub(pattern = 6, replacement = "PN", x = neph$NephronID)
DimPlot(neph, group.by = "NephronID")
npc <- neph[, neph$NephronID == 5]
npc$NephronID <- NA
npc$LineageID <- "NPC"
en <- neph[, neph$NephronID=="EN"]
en$SegmentID <- NA
dn <- neph[, neph$NephronID == "DN"]
dn <- dn[, dn$SegmentID %in% c("EDN", "DT", "LOH")]
pn <- neph[, neph$NephronID == "PN" & neph$SegmentID %in% c("EPN", "PT", "PEC")]
rc <- neph[, neph$NephronID == "RC" & neph$SegmentID %in% c("EPod", "Pod")]
md <- make.models@meta.data
md <-
left_join((md %>% rownames_to_column("cell") %>% select(cell)),
bind_rows(md %>% rownames_to_column("cell") %>% filter(LineageID %!in% c("Nephron")),
npc@meta.data %>% rownames_to_column("cell"),
en@meta.data %>% rownames_to_column("cell"),
dn@meta.data %>% rownames_to_column("cell"),
pn@meta.data %>% rownames_to_column("cell"),
rc@meta.data %>% rownames_to_column("cell")),
by = "cell")  %>%
column_to_rownames("cell")
md <- md %>% filter(!is.na(LineageID))
md %>% filter(LineageID == "NPC" & !is.na(SegmentID)) %>% rownames() -> remove
make.models <- subset(make.models, cells = (rownames(md)[rownames(md) %!in% remove]))
make.models@meta.data <- md[, c(1:11)]
DimPlot(make.models, group.by = "LineageID")
DimPlot(make.models, group.by = "NephronID")
DimPlot(make.models, group.by = "SegmentIDID")
DimPlot(make.models, group.by = "SegmentID")
write_rds(make.models, "output/seurat/NewRef.rds")
load("/group/kidn1/Group-Little_MCRI/People/Sean/PhD/R-projects/DevKidCC/data/organoid.rda")
devtools::load_all(".")
a
1
devtools::load_all("../DevKidCC/")
howden
howden <- DevKidCC(howden)
DimPlot(howden, group.by = "DKCC")
DimPlot(howden, group.by = "DKCC", label = T)
DimPlot(howden[, howden$NephronID=="EN"], group.by = "DKCC", label = T)
